{
    "name": "copy-github-url",
    "version": "0.16.0",
    "publisher": "mattlott",
    "displayName": "Copy GitHub URL",
    "description": "Copy GitHub URL for current location to clipboard.",
    "repository": {
        "type": "git",
        "url": "https://github.com/differentmatt/vscode-copy-github-url"
    },
    "homepage": "https://github.com/differentmatt/vscode-copy-github-url/blob/main/README.md",
    "bugs": "https://github.com/differentmatt/vscode-copy-github-url/issues",
    "icon": "images/icon.png",
    "galleryBanner": {
        "color": "#009933",
        "theme": "dark"
    },
    "engines": {
        "vscode": "^1.74.0",
        "node": ">=18.0.0"
    },
    "license": "MIT",
    "categories": [
        "Other",
        "Snippets"
    ],
    "main": "./dist/extension",
    "contributes": {
        "commands": [
            {
                "command": "extension.gitHubUrl",
                "title": "Copy GitHub URL"
            },
            {
                "command": "extension.gitHubUrlPerma",
                "title": "Copy GitHub URL (Permalink)"
            },
            {
                "command": "extension.gitHubUrlDefault",
                "title": "Copy GitHub URL (Main)"
            },
            {
                "command": "extension.gitHubUrlDebug",
                "title": "Debug Copy GitHub URL (Non-text files)"
            }
        ],
        "keybindings": [
            {
                "command": "extension.gitHubUrl",
                "key": "ctrl+l c",
                "when": "editorFocus || activeEditorIsNotText || resourceScheme == 'file' || activeViewlet == 'workbench.view.explorer'"
            },
            {
                "command": "extension.gitHubUrlPerma",
                "key": "ctrl+shift+l c",
                "when": "editorFocus || activeEditorIsNotText || resourceScheme == 'file' || activeViewlet == 'workbench.view.explorer'"
            },
            {
                "command": "extension.gitHubUrlDefault",
                "key": "ctrl+shift+l m",
                "when": "editorFocus || activeEditorIsNotText || resourceScheme == 'file' || activeViewlet == 'workbench.view.explorer'"
            }
        ],
        "menus": {
            "explorer/context": [
                {
                    "command": "extension.gitHubUrl",
                    "group": "7_modification",
                    "when": "resourceScheme == 'file'"
                },
                {
                    "command": "extension.gitHubUrlPerma",
                    "group": "7_modification",
                    "when": "resourceScheme == 'file'"
                },
                {
                    "command": "extension.gitHubUrlDefault", 
                    "group": "7_modification",
                    "when": "resourceScheme == 'file'"
                }
            ]
        },
        "configuration": {
            "title": "Copy github url configuration",
            "properties": {
                "copyGithubUrl.defaultBranchFallback": {
                    "type": "string",
                    "description": "Default branch name to use if it cannot be determined dynamically"
                },
                "copyGithubUrl.domainOverride": {
                    "type": "string",
                    "description": "GitHub domain override, for scenarios like enterprise instances or SSH aliases. E.g. github.example.com"
                },
                "copyGithubUrl.gitUrl": {
                    "type": "string",
                    "description": "Deprecated: Use domainOverride instead. GitHub domain override, for scenarios like enterprise instances or SSH aliases.",
                    "deprecationMessage": "This setting is deprecated. Please use copyGithubUrl.domainOverride instead."
                },
                "copyGithubUrl.rootGitFolder": {
                    "type": "string",
                    "description": "Provides the relative path to the folder that contains the .git folder for the current opened workspace or folder in multi folder workspace"
                }
            }
        }
    },
    "scripts": {
        "vscode:prepublish": "webpack --mode production",
        "package": "npm run vscode:prepublish && vsce package",
        "webpack": "NODE_ENV=test webpack --mode development",
        "lint": "npx standard --fix",
        "test": "standard && node ./test/runTest.js"
    },
    "standard": {
        "globals": [
            "suite",
            "test",
            "setup",
            "teardown",
            "__INSTRUMENTATION_KEY__"
        ]
    },
    "devDependencies": {
        "@types/glob": "^8.1.0",
        "@types/mocha": "^10.0.10",
        "@types/node": "22.x",
        "@types/vscode": "^1.74.0",
        "@vscode/test-electron": "^2.4.1",
        "@vscode/vsce": "^3.2.1",
        "glob": "^11.0.0",
        "globals": "^15.14.0",
        "mocha": "^11.0.1",
        "sinon": "^19.0.2",
        "standard": "^17.1.2",
        "typescript": "^5.7.2",
        "webpack": "^5.97.1",
        "webpack-cli": "^6.0.1"
    },
    "dependencies": {
        "@vscode/extension-telemetry": "^0.9.8",
        "github-url-from-git": "^1.5.0"
    }
}
